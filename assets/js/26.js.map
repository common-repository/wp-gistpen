{"version":3,"sources":["webpack:///./client/prism/plugins/copy-to-clipboard.ts","webpack:///./node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js"],"names":["plugin","use","unuse"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,IAAMA,MAAM,GAAG;AACpBC,KADoB,iBACd,CAAE,CADY;AAGpBC,OAHoB,mBAGZ,CAAE;AAHU,CAAf,C;;;;;;;;;;;ACFP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,UAAc;AACnC,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF,CAAC","file":"26.js","sourcesContent":["import 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\n\nexport const plugin = {\n  use() {},\n\n  unuse() {}\n};\n","(function(){\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\tvar ClipboardJS = window.ClipboardJS || undefined;\n\n\tif (!ClipboardJS && typeof require === 'function') {\n\t\tClipboardJS = require('clipboard');\n\t}\n\n\tvar callbacks = [];\n\n\tif (!ClipboardJS) {\n\t\tvar script = document.createElement('script');\n\t\tvar head = document.querySelector('head');\n\n\t\tscript.onload = function() {\n\t\t\tClipboardJS = window.ClipboardJS;\n\n\t\t\tif (ClipboardJS) {\n\t\t\t\twhile (callbacks.length) {\n\t\t\t\t\tcallbacks.pop()();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js';\n\t\thead.appendChild(script);\n\t}\n\n\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n\t\tvar linkCopy = document.createElement('button');\n\t\tlinkCopy.textContent = 'Copy';\n\n\t\tif (!ClipboardJS) {\n\t\t\tcallbacks.push(registerClipboard);\n\t\t} else {\n\t\t\tregisterClipboard();\n\t\t}\n\n\t\treturn linkCopy;\n\n\t\tfunction registerClipboard() {\n\t\t\tvar clip = new ClipboardJS(linkCopy, {\n\t\t\t\t'text': function () {\n\t\t\t\t\treturn env.code;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclip.on('success', function() {\n\t\t\t\tlinkCopy.textContent = 'Copied!';\n\n\t\t\t\tresetText();\n\t\t\t});\n\t\t\tclip.on('error', function () {\n\t\t\t\tlinkCopy.textContent = 'Press Ctrl+C to copy';\n\n\t\t\t\tresetText();\n\t\t\t});\n\t\t}\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlinkCopy.textContent = 'Copy';\n\t\t\t}, 5000);\n\t\t}\n\t});\n})();\n"],"sourceRoot":""}